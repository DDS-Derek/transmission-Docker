#!/usr/bin/with-contenv bash
# shellcheck shell=bash

DOWNLOAD_DIR=${DOWNLOAD_DIR:-/downloads}

UMASK=${UMASK:-022}
umask "${UMASK}"

if [[ ! -f /config/settings.json ]]; then
    cp /defaults/settings.json /config/settings.json
fi

if [[ -n "${USER}" ]] && [[ -n "${PASS}" ]]; then
    echo -E "$(jq -r '.["rpc-authentication-required"] = true' /config/settings.json)" >/config/settings.json
    echo -E "$(jq -r --arg user "${USER}" '.["rpc-username"] = $user' /config/settings.json)" >/config/settings.json
    echo -E "$(jq -r --arg pass "${PASS}" '.["rpc-password"] = $pass' /config/settings.json)" >/config/settings.json
else
    echo -E "$(jq -r '.["rpc-authentication-required"] = false' /config/settings.json)" >/config/settings.json
fi

if [[ -n "${WHITELIST}" ]]; then
    echo -E "$(jq -r '.["rpc-whitelist-enabled"] = true' /config/settings.json)" >/config/settings.json
    echo -E "$(jq -r --arg whitelist "${WHITELIST}" '.["rpc-whitelist"] = $whitelist' /config/settings.json)" >/config/settings.json
else
    echo -E "$(jq -r '.["rpc-whitelist-enabled"] = false' /config/settings.json)" >/config/settings.json
fi

if [[ -n "${HOST_WHITELIST}" ]]; then
    echo -E "$(jq -r '.["rpc-host-whitelist-enabled"] = true' /config/settings.json)" >/config/settings.json
    echo -E "$(jq -r --arg host_whitelist "${HOST_WHITELIST}" '.["rpc-host-whitelist"] = $host_whitelist' /config/settings.json)" >/config/settings.json
else
    echo -E "$(jq -r '.["rpc-host-whitelist-enabled"] = false' /config/settings.json)" >/config/settings.json
fi

if [[ -n "${PEERPORT}" ]]; then
    echo -E "$(jq -r --argjson peerport "${PEERPORT}" '.["peer-port"] = $peerport' /config/settings.json)" >/config/settings.json
    echo -E "$(jq -r '.["peer-port-random-on-start"] = false' /config/settings.json)" >/config/settings.json
fi

if [[ -n "${PRCPORT}" ]]; then
    echo -E "$(jq -r --argjson rpcport "${PRCPORT}" '.["rpc-port"] = $rpcport' /config/settings.json)" >/config/settings.json
fi

if [[ -n "${UMASK}" ]]; then
    echo -E "$(jq -r --arg umask "${UMASK}" '.["umask"] = $umask' /config/settings.json)" >/config/settings.json
fi

if grep -qe " ${DOWNLOAD_DIR} " /proc/mounts; then
    echo -E "$(jq -r --arg downloaddir "${DOWNLOAD_DIR}" '.["download-dir"] = $downloaddir' /config/settings.json)" >/config/settings.json
    echo -E "$(jq -r --arg incompletedir "${DOWNLOAD_DIR}/incomplete" '.["incomplete-dir"] = $incompletedir' /config/settings.json)" >/config/settings.json
fi
